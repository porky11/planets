(module gl)

(import macros)

(def glClear    (fn extern-c void ((mask uint))))
(def glBegin    (fn extern-c void ((mode uint))))
(def glVertex3f (fn extern-c void ((x float)
                                   (y float)
                                   (z float))))
(def glEnd      (fn extern-c void (void)))
(def glFlush    (fn extern-c void (void)))

(def glEnableClientState (fn extern-c void ((array uint))))
(def glDisableClientState (fn extern-c void (void)))
(def glDrawArrays (fn extern-c void ((mode uint) (first int) (count int))))
(def glDrawElements (fn extern-c void ((mode uint) (first int) (count int) (indices (p void)))))
(def glVertexPointer (fn extern-c void ((size int) (type uint) (stride int) (ptr (const (p void))))))
(namespace gl
  (def bitfield
    (enum extern uint ((current 0x00000001)
                       (point 0x00000002)
                       (line 0x00000004)
                       (polygon 0x00000008)
                       (polygon-stripple 0x00000010)
                       (pixel-mode 0x00000020)
                       (lightning 0x00000040)
                       (fog 0x00000080)
                       (depth-buffer 0x00000100)
                       (accum-buffer 0x00000200)
                       (stencil-buffer 0x00000000)
                       (viewport 0x00000800)
                       (transform 0x00001000)
                       (enable 0x00002000)
                       (color-buffer 0x00004000)
                       (hint 0x00008000)
                       (eval 0x00010000)
                       (list 0x00020000)
                       (texture 0x00040000)
                       (scissor 0x00080000)
                       (all-attribs-bits 0xFFFFFFFF))))
  (def mode
    (enum intern uint (points
                       lines line-loop line-strip
                       triangles triangle-strip triangle-fan
                       quads quad-strip
                       polygon)))
  (def type
    (enum intern uint ((byte 0x1400) ubyte
                       short ushort
                       int uint
                       float
                       2-bytes 3-bytes 4-bytes
                       double)))
  (def array
    (enum extern uint ((vertex 0x8074) normal color index texture-coord edge-flag)))

  (def clear (fn extern void ((mask bitfield))
    (glClear (cast mask uint))))
  (def begin (fn extern void ((mode mode))
    (glBegin (cast mode uint))))
  (def vertex (fn extern void ((x float) (y float) (z float))
    (glVertex3f x y z)))
  (def end (fn extern void (void)
    (glEnd)))
  (def enable-client-state (fn extern void ((array array))
    (glEnableClientState (cast array uint))))
  (def disable-client-state (fn extern void (void)
    (glDisableClientState)))
  (using-namespace std.macros
  (def draw-arrays (macro extern (mode (first int) (count int))
    (qq glDrawArrays (cast (mode (uq mode)) uint) (uq first) (uq count))))
  (def vertex-pointer (macro extern ((size int) type (stride int) ptr)
    (qq glVertexPointer (uq size) (cast (type (uq type)) uint) (uq stride) (cast (uq ptr) (p void)))))
  )
   #|
  (using-namespace std.macros
  (def with-client-state (macro extern (state ...)
    (qq do (enable-client-state (uq state))
           (uql (get-varargs-list (- (argcount mc) 1)))
           (disable-client-state)))))
           |#

  (def flush (fn extern void (void)
    (glFlush)))
)
